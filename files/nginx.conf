user nginx;
worker_processes 4;
pid /run/nginx.pid;
daemon off;
error_log /DATA/logs/error.log warn;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100m;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

      
        #a new log format for detecting bad bots.
  		log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';

  		 ## This log format makes it so we can see real requester's IP address \
		  ##    not just the reverse proxy server's IP address. Also note, that \
		  ##    "specialLog" can be replaced with any name you would like to \
		  ##    give to this log format.
		  log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
		                        '"$request" $status $body_bytes_sent '
		                        '"$http_referer" "$http_user_agent"';

	        server {
	        listen 80;
	        
	        root /DATA/www;
	        index index.php index.html index.htm;
	        access_log /DATA/logs/nginx/access.log specialLog;
    		error_log /DATA/logs/nginx/error.log;

	        
    		# Enable MODX URL rewrite
	        location / {
	                root /DATA/www;
	                if (!-e $request_filename) {
	                        rewrite ^/(.*)$ /index.php?q=$1 last;
	                }
	        }


	        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		    location ~ [^/]\.php(/|$) {
		      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		      if (!-f $document_root$fastcgi_script_name) {
		        return 404;
		      }
		      fastcgi_pass 127.0.0.1:9000;
		      fastcgi_index index.php;
		      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		      include fastcgi_params;
		    }


		
		}


}
